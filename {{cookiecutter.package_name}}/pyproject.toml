# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name="{{ cookiecutter.package_name }}"
description="{{ cookiecutter.package_description }}"
classifiers = [
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Operating System :: OS Independent",
]
version="{{ cookiecutter.package_version }}"
authors = [
    {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"},
]
keywords = ["python"]
license = {file = "LICENSE"}
dependencies = [
    "matplotlib",
]
readme = "README.md"
requires-python = ">=3.10"

[project.optional-dependencies]
dev = [
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest_regressions",
    ]
docs = [
    "jupytext",
    "autodoc_pydantic",
    "matplotlib",
    "jupyter-book==0.15.1",
    "sphinx-click",
    ]


[tool.setuptools.packages]
find = {}

# [project.scripts]
# {{cookiecutter.package_name}} = "{{cookiecutter.package_name}}.cli:cli"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''  # Specify the files/dirs that should be ignored by the black formatter
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["{{cookiecutter.package_name}}/", "tests"]
# addopts = --tb=no
addopts = '--tb=short'
python_files = ["{{ cookiecutter.package_name }}/*.py", "notebooks/*.ipynb", "tests/*.py"]
norecursedirs = ["extra/*.py"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = [
    "pyproject.toml:version",
]

[tool.mypy]
python_version = "3.10"
strict = true

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true

[tool.isort]
multi_line_output = 3
line_length = 88
include_trailing_comma = true
# skip = "{{cookiecutter.package_name}}/__init__.py"

[tool.setuptools.package-data]
mypkg = ["*.csv", "*.yaml"]

[tool.codespell]
ignore-words-list = "te, te/tm, te, ba, fpr, fpr_spacing, ro, nd, donot, schem"

[tool.pydocstyle]
inherit = false
match = "(?!test).*\\.py"
add-ignore = ["D100","D101","D102","D103","D104","D203","D405","D417"]
convention = "google"

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP"
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B905",  # `zip()` without an explicit `strict=` parameter
    "C408",  # C408 Unnecessary `dict` call (rewrite as a literal)
]
